/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package kr.ac.gwnu.com.kwon;

import java.io.*;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public static void selectMenu(Customer customer, int num1, int num2, boolean num3) {
        System.out.println(customer.performMenu1(num1));
        if (num1 != 0) {
            System.out.println(customer.performMenu2(num2));
            System.out.println(customer.performMenu3(num3));
        }
        customer.clearML();
    }

    public static void selectIce(Customer customer, int num1, boolean num3, int iceNum) {
        if (num1 != 0 && num3 != false) {
            switch (iceNum) {
                case 1:
                    customer.setIce(new IceLess());
                    System.out.println(customer.performIce(iceNum));
                    break;
                case 2:
                    customer.setIce(new IceRegular());
                    System.out.println(customer.performIce(iceNum));
                    break;
                case 3:
                    customer.setIce(new IceFull());
                    System.out.println(customer.performIce(iceNum));
                    break;
            }
        }
    }

    public static void selectSize(Customer customer, int num1, int sizeNum) {
        if (num1 != 0) {
            switch (sizeNum) {
                case 1:
                    customer.setSize(new SizeTall());
                    System.out.println(customer.performSize(sizeNum));
                    break;
                case 2:
                    customer.setSize(new SizeGrande());
                    System.out.println(customer.performSize(sizeNum));
                    break;
                case 3:
                    customer.setSize(new SizeGrande());
                    System.out.println(customer.performSize(sizeNum));
                    break;
            }
        }
    }

    public static void selectTopping(Customer customer, boolean num3, int toppNum) throws FileNotFoundException {
        customer.menuList(new BufferedReader(new FileReader("src\\main\\resources\\Topping.txt")));

        if (num3 == false) {
            customer.setTopping(new ToppingForHot());
            System.out.println(customer.performTopping(toppNum));
            customer.clearML();
        } else {
            customer.setTopping(new ToppingForCold());
            System.out.println(customer.performTopping(toppNum));
            customer.clearML();
        }
    }

    public static void personalInfo(Customer customer) {
        customer.showPersonal();
        System.out.println(customer.showResult()); // PERSONAL PART
    }

    public static void main(String[] args) throws FileNotFoundException {
        ForHere forHere = new ForHere("교수님");
        ToGo togo = new ToGo("권수빈");
        System.out.println("---------------------------------------------------------");
        System.out.println("안녕하세요 " + forHere.getName() + " 고객님!");
        System.out.println(forHere.type() + "을 선택하셨습니다.");
        System.out.println("---------------------------------------------------------");
        forHere.setMenu(new Coffee());
        forHere.menuList(new BufferedReader(new FileReader("src\\main\\resources\\Coffee.txt")));
        selectMenu(forHere, 2, 1, false);
        selectSize(forHere, 1, 1);
        selectTopping(forHere, false, 2);
        forHere.setMenu(new Ade());
        forHere.menuList(new BufferedReader(new FileReader("src\\main\\resources\\Ade.txt")));
        selectMenu(forHere, 0, 1, false);
        System.out.println("[!!] 커스텀 선택이 완료되었습니다. 내역을 확인해주세요 [!!]");
        // personalInfo(forHere); //퍼스널 닉네임, 음료 이름 설정 가능

        System.out.println();
        System.out.println();
        System.out.println("---------------------------------------------------------");
        System.out.println("안녕하세요 " + togo.getName() + " 고객님!");
        System.out.println(togo.type() + "을 선택하셨습니다.");
        System.out.println("---------------------------------------------------------");
        togo.setMenu(new Coffee());
        togo.menuList(new BufferedReader(new FileReader("src\\main\\resources\\Coffee.txt")));
        selectMenu(togo, 0, 1, false);
        togo.setMenu(new Ade());
        togo.menuList(new BufferedReader(new FileReader("src\\main\\resources\\Ade.txt")));
        selectMenu(togo, 1, 1, true);
        selectSize(togo, 1, 2);
        selectTopping(togo, true, 0);
        selectIce(togo, 1, true, 1);
        System.out.println("[!!] 커스텀 선택이 완료되었습니다. 내역을 확인해주세요 [!!]");
        // personalInfo(togo); //퍼스널 닉네임, 음료 이름 설정 가능
    }
}
